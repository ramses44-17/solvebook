<CardContent className="p-6">
          <Dialog>
            <DialogTrigger asChild>
              <Button className="w-full mb-6 bg-gradient-to-r from-green-400 to-blue-500 hover:from-green-500 hover:to-blue-600 text-white font-semibold py-2 px-4 rounded-lg transition duration-300 ease-in-out transform hover:scale-105">
                Créer un problème
              </Button>
            </DialogTrigger>
            <DialogContent className="sm:max-w-[425px]">
              <DialogHeader>
                <DialogTitle>Ajouter un nouveau problème</DialogTitle>
              </DialogHeader>
              <div className="grid gap-4 py-4">
                <div className="grid gap-2">
                  <Label htmlFor="title">Titre</Label>
                  <Input
                    id="title"
                    value={newProblem.title}
                    onChange={(e) => setNewProblem(prev => ({ ...prev, title: e.target.value }))}
                    placeholder="Titre du problème"
                  />
                </div>
                <div className="grid gap-2">
                  <Label htmlFor="content">Description</Label>
                  <Input
                    id="content"
                    value={newProblem.content}
                    onChange={(e) => setNewProblem(prev => ({ ...prev, content: e.target.value }))}
                    placeholder="Décrivez le problème ici"
                  />
                </div>
              </div>
              <Button onClick={addProblem} className="w-full">Ajouter le problème</Button>
            </DialogContent>
          </Dialog>

          <div className="grid gap-6">
            {niche.problems.map((problem) => (
              <Card key={problem.id} className="bg-white shadow-sm hover:shadow-md transition-shadow duration-300">
                <CardHeader>
                  <CardTitle className="text-xl font-semibold text-gray-800">{problem.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-600 mb-4">{problem.content}</p>
                  <div className="flex items-center space-x-4 text-sm text-gray-500">
                    <Button variant="ghost" size="sm" className="flex items-center space-x-1">
                      <ThumbsUp className="w-4 h-4" />
                      <span>{problem.likes}</span>
                    </Button>
                    <Button variant="ghost" size="sm" className="flex items-center space-x-1">
                      <MessageCircle className="w-4 h-4" />
                      <span>{problem.comments}</span>
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </CardContent>














        <Form {...form}>
          <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">
            <FormField
              control={form.control}
              name="email"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Email</FormLabel>
                  <FormControl>
                    <Input placeholder="Enter your email" {...field} />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
            <Button type="submit" className="w-full" disabled={isLoading}>
              {!isLoading ? "Login with email" : <Loader size="small"/>}
            </Button>
          </form>
        </Form>




        loginInterface.tsx
        "use client"
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { signIn } from "next-auth/react";
import { Github } from "lucide-react";
import { Card } from "./ui/card";

export default function LoginInterface() {

  return (
    <Card className="space-y-4 p-28 items-center justify-center">
      <div className="space-y-2 text-center">
        <h2 className="text-2xl font-bold">Welcome Back</h2>
        <p className="text-sm text-muted-foreground">
          Choose your login method
        </p>
      </div>
      <div className="space-y-4">
        <Button
          variant="outline"
          className="w-full"
          onClick={()=>signIn("github")}
        >
          <Github className="mr-2 h-4 w-4" />
          Login with GitHub
        </Button>
        <Button
          variant="outline"
          className="w-full"
          onClick={()=>signIn("google")}
        >
          <svg
            className="mr-2 h-4 w-4"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
              fill="#4285F4"
            />
            <path
              d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
              fill="#34A853"
            />
            <path
              d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
              fill="#FBBC05"
            />
            <path
              d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
              fill="#EA4335"
            />
          </svg>
          Login with Google
        </Button>
      </div>
    </Card>
  );
}




dropdown of connexion
<DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="ghost" className="relative h-8 w-8 rounded-full">
          <Avatar className="h-8 w-8">
            <AvatarImage src="#"alt="user avatar" />
            <AvatarFallback>A</AvatarFallback>
          </Avatar>
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent className="w-56" align="end" forceMount>
        <Link href="/users/profil">
        <DropdownMenuItem>
          <UserIcon className="mr-2 h-4 w-4" />
          <span>profil</span>
        </DropdownMenuItem>
        </Link>
        <DropdownMenuItem onClick={()=>signOut()}>
          <LogOut className="mr-2 h-4 w-4" />
          <span>Logout</span>
        </DropdownMenuItem>
      </DropdownMenuContent>
    </DropdownMenu>: